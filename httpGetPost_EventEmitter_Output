-- app.module --
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { UserComponent } from './components/user/user.component';
import { UsersComponent } from './components/users/users.component';
import { NavbarComponent } from './components/navbar/navbar.component';
import { UserService } from './services/user.service';
import { PostService } from './services/post.service';
import { PostsComponent } from './components/posts/posts.component';
import { HttpClientModule, HttpClient } from '@angular/common/http';
import { PostFormComponent } from './components/post-form/post-form.component';

@NgModule({
  declarations: [
    AppComponent,
    UserComponent,
    UsersComponent,
    NavbarComponent,
    PostsComponent,
    PostFormComponent,
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    FormsModule,
    HttpClientModule
  ],
  providers: [UserService, PostService],
  bootstrap: [AppComponent]
})
export class AppModule { }


-- ui.ts
import { Component, OnInit } from '@angular/core';
import { Post } from '../../models/Post';
import { PostService } from '../../services/post.service';

@Component({
  selector: 'app-posts',
  templateUrl: './posts.component.html',
  styleUrls: ['./posts.component.css']
})
export class PostsComponent implements OnInit {

posts: Post[];

  constructor(private postService: PostService) { }

  ngOnInit(): void {

    this.postService.getPosts()
    .subscribe(data => this.posts = data);

  }

  onNewPost(post:Post){
    this.posts.unshift(post);
  }

}

-- ui.html
<app-post-form (newPost)="onNewPost($event)"></app-post-form>
<h2>Posts</h2>
<div class="card" *ngFor="let post of posts">
<div class="card-body">
    <h3>{{ post.title }}</h3>
    <p>{{ post.body }}</p>
</div>
</div>


-- ui-childform.ts
import { Component, OnInit, EventEmitter, Output } from '@angular/core';
import { Post } from '../../models/Post';
import { PostService } from '../../services/post.service';

@Component({
  selector: 'app-post-form',
  templateUrl: './post-form.component.html',
  styleUrls: ['./post-form.component.css']
})
export class PostFormComponent implements OnInit {

  post:Post;
  @Output() newPost: EventEmitter<Post> = new EventEmitter();  

  constructor(private postService:PostService) { }

  ngOnInit(): void {
  }

  addPost(title:string, body:string){
    if(!title || !body){
      alert('Please add post');
    } else {
      this.postService.savePost({title, body} as Post)
      .subscribe(post => this.newPost.emit(post));
    }
  }

}


-- ui-childform.html
<h2>Add post</h2>
<div class="card card-body mb-3">
    <div class="form-group">
        <label>Title</label>
        <input type="text" class="form-control" name="title" #title>
    </div>
    <div class="form-group">
        <label>Body</label>
        <input type="text" name="body" class="form-control" #body>
    </div>
    <button (click)="addPost(title.value, body.value)" class="btn btn-dark btn-block">Add Post</button>
</div>

-- service.ts
import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Observable } from 'rxjs';
import { Post } from '../models/Post';

const httpOptions = {
  headers: new HttpHeaders({ 'content-type': 'application/json' })
};

@Injectable({
  providedIn: 'root'
})
export class PostService {

  postsUrl: string = 'https://jsonplaceholder.typicode.com/posts';

  constructor(private http: HttpClient) { }

  getPosts(): Observable<Post[]> {

    return this.http.get<Post[]>(this.postsUrl);

  }

  savePost(post: Post): Observable<Post> {
    return this.http.post<Post>(this.postsUrl, post, httpOptions);
  }

}
